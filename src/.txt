1) Fetch

import React, { useState, useEffect } from "react";

const App = () => {

const [users, setUsers] = useState([]); //Creamos un array donde luego lo cargamos con info

  useEffect(() => { // al momento de renderizar, el useEffect se dispara
    fetch('https://api.github.com/users')
    .then((response => response.json())
    .then((data) => setUsers(data))
  )}, []) // Traemos de la api los users y los cargamos en el array
  
2)  para evitar envolver nuestro codigo en un div, podemos usar <React.Fragment></React.Fragment> o incluso de esta manera: <> </>

3)  si no pongo export default abajo, otra manera es la siguiente:

// export class App extends ... etc.
// y en index.js debemos agregar unas llaves en donde dice import App:
// import { App } from './App'

4) componente funcional vs de clase:

const ItemCount = (props) => {

    const [counter, setCounter] = React.useState(0);
/*      otra manera seria la siguiente:
    import React, {useState} from 'react'
     const [counter, setCounter] = useState(0);
 */
    const handlerCounterUp = () => {
        if (counter < props.user.clothes[0].stock) {
            setCounter(counter + 1)
        }
    }

    const handlerCounterDown = () => {
        if (counter>0) {
            setCounter(counter-1)
            
        }
    }

    /* podemos usar el componente clase en lugar de funcion de la siguiente manera:
    
    class Item extends Component {
        constructor () {
            super ();
            this.state = {
                counter: 0;
            }
        }
        
        handlerCounterUp = () => {
            this.setState( {
                counter = this.counter + 1
            })    
        }
    }
    
    cada vez que llamemos a counter, debemos usar this.counter
    
    */

    5) en vez de usar fetch, podemos instalar axios y hacer lo siguiente:

import axios from "axios"

useEffect(() => { 
    setTimeout(()=> {
axios.get ('https://jsonplaceholder.typicode.com/photos').then(res) => console.log(res.data)
 },2000)
  }, []) 

  para evitar tanto codigo podemos usar React Query